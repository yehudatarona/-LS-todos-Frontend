{"ast":null,"code":"var _jsxFileName = \"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\src\\\\tods_comps\\\\toDoItem.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport \"../css_comps/todos.css\";\nimport Moment from 'moment';\n\nfunction ToDoItem(props) {\n  let userInput = useRef(null);\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY'); // let [item,setItem]=useState(props.item.items)\n  // useEffect (()=>{\n  //   setItem(props.item.items)\n  // },[])\n\n  let dispatch = useDispatch();\n\n  const addTask = () => {\n    let tempItem = {\n      id_card: props.item.id,\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: userInput.current.value,\n      created_at: dateFormat,\n      completed: false\n    };\n    dispatch({\n      type: \"addItem\",\n      ItemBody: tempItem\n    });\n    console.log(\"item->\", item);\n  }; // const delTask = (_id) => {\n  //   let temp = userDate.filter(item => item.id !== _id)\n  //   setUserDate(temp);\n  //   saveTolocal(temp)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-center\",\n    style: {\n      color: \"turquoise\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.item.todo_name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: userInput,\n    type: \"text\",\n    className: \"form-control w-25 border border-info\",\n    placeholder: \"I have to...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTask,\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Add Item\")), item.map((val, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"d-flex justify-content-between align-items-center border border-danger p-2 m-2 items \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: val.id,\n      type: \"checkbox\",\n      name: \"isDone\",\n      className: \"mr-1\",\n      checked: val.completed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: val.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, val.item_name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, val.created_at), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        alert(val.id);\n      },\n      className: \"btn btn-outline-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"X\"));\n  }));\n}\n\nexport default ToDoItem;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/tods_comps/toDoItem.js"],"names":["React","useEffect","useRef","useState","useDispatch","Moment","ToDoItem","props","userInput","dateFormat","Date","format","dispatch","addTask","tempItem","id_card","item","id","Math","random","toFixed","item_name","current","value","created_at","completed","type","ItemBody","console","log","color","todo_name","map","val","i","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport \"../css_comps/todos.css\"\r\nimport Moment from 'moment';\r\nfunction ToDoItem(props) {\r\n  let userInput = useRef(null);\r\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\n  // let [item,setItem]=useState(props.item.items)\r\n  // useEffect (()=>{\r\n  //   setItem(props.item.items)\r\n  // },[])\r\n  let dispatch = useDispatch();\r\n  const addTask = () => {\r\n    let tempItem = {\r\n      id_card: props.item.id,\r\n      id: Math.random(300 * 39).toFixed(2),\r\n      item_name: userInput.current.value,\r\n      created_at: dateFormat,\r\n      completed: false\r\n    }\r\n\r\n    dispatch({ type: \"addItem\", ItemBody: tempItem })\r\n    console.log(\"item->\",item);\r\n    \r\n\r\n  }\r\n\r\n\r\n    // const delTask = (_id) => {\r\n    //   let temp = userDate.filter(item => item.id !== _id)\r\n    //   setUserDate(temp);\r\n    //   saveTolocal(temp)\r\n    // }\r\n\r\n    return (\r\n      <div className=\"p-2 \">\r\n        <h1 className=\"display-4 text-center\" style={{ color: \"turquoise\" }}>{props.item.todo_name}</h1>\r\n        <div className=\"d-flex align-items-center justify-content-center\">\r\n          <input ref={userInput} type=\"text\" className=\"form-control w-25 border border-info\" placeholder=\"I have to...\" />\r\n          <button onClick={addTask} className=\"btn btn-success\">Add Item</button>\r\n        </div>\r\n        {item.map((val, i) => {\r\n          return (\r\n            <div key={i} className=\"d-flex justify-content-between align-items-center border border-danger p-2 m-2 items \">\r\n              <div>\r\n                <input id={val.id} type=\"checkbox\" name=\"isDone\" className=\"mr-1\" checked={val.completed} />\r\n                <label htmlFor={val.id}>{val.item_name}</label>\r\n              </div>\r\n              <div>{val.created_at}</div>\r\n              {/* <div> */}\r\n              <button onClick={() => { alert(val.id) }} className=\"btn btn-outline-secondary\">X</button>\r\n              {/* </div> */}\r\n            </div>)\r\n\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default ToDoItem\r\n\r\n"]},"metadata":{},"sourceType":"module"}