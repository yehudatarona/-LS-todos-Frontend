{"ast":null,"code":"// import Moment from 'moment';\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\nconst initState = {\n  todos_ar: [// { id:1, name: \"Do homework\", date: dateFormat },\n  // { id:2, name: \"Go to work\", date: dateFormat }\n  {\n    id: 1,\n    todo_name: \"todos shopping list\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"googo \",\n      created_at: \"26/12/2020\",\n      completed: false\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  }, {\n    id: 2,\n    todo_name: \"buy cars\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  }],\n  counterId: 2\n};\nexport const toDoReducer = (state = initState, action) => {\n  if (action.type === \"addTask\") {\n    let temp_ar = [...state.tasks_ar];\n    temp_ar.push(action.taskItem);\n    return { ...state,\n      tasks_ar: temp_ar\n    };\n  } else if (action.type === \"addCounterId\") {\n    state.counterId++;\n    return { ...state,\n      counterId: state.counterId++\n    };\n  } else {\n    return state;\n  }\n};","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/reducer/toDoReducer.js"],"names":["initState","todos_ar","id","todo_name","items","Math","random","toFixed","item_name","created_at","completed","updated_at","counterId","toDoReducer","state","action","type","temp_ar","tasks_ar","push","taskItem"],"mappings":"AAAA;AACA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,CACR;AACA;AAEA;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,qBAFb;AAGEC,IAAAA,KAAK,EAAE,CACL;AACAF,MAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADJ;AAEAC,MAAAA,SAAS,EAAE,UAFX;AAGAC,MAAAA,UAAU,EAAE,YAHZ;AAIAC,MAAAA,SAAS,EAAC;AAJV,KADK,EAOP;AACER,MAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAC;AAJZ,KAPO,CAHT;AAgBED,IAAAA,UAAU,EAAE,YAhBd;AAiBEE,IAAAA,UAAU,EAAE;AAjBd,GAJQ,EAuBR;AACET,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,KAAK,EAAE,CACL;AACAF,MAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADJ;AAEAC,MAAAA,SAAS,EAAE,UAFX;AAGAC,MAAAA,UAAU,EAAE,YAHZ;AAIAC,MAAAA,SAAS,EAAC;AAJV,KADK,EAOP;AACER,MAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAC;AAJZ,KAPO,CAHT;AAgBED,IAAAA,UAAU,EAAE,YAhBd;AAiBEE,IAAAA,UAAU,EAAE;AAjBd,GAvBQ,CADM;AA4ChBC,EAAAA,SAAS,EAAE;AA5CK,CAAlB;AAgDA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGd,SAAT,EAAoBe,MAApB,KAA+B;AACxD,MAAIA,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACI,QAAV,CAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAaJ,MAAM,CAACK,QAApB;AACA,WAAO,EAAE,GAAGN,KAAL;AAAYI,MAAAA,QAAQ,EAAED;AAAtB,KAAP;AACD,GAJD,MAKK,IAAIF,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AACvCF,IAAAA,KAAK,CAACF,SAAN;AACA,WAAO,EAAE,GAAGE,KAAL;AAAYF,MAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN;AAAvB,KAAP;AAED,GAJI,MAMA;AACH,WAAOE,KAAP;AACD;AACF,CAfM","sourcesContent":["// import Moment from 'moment';\r\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\nconst initState = {\r\n  todos_ar: [\r\n    // { id:1, name: \"Do homework\", date: dateFormat },\r\n    // { id:2, name: \"Go to work\", date: dateFormat }\r\n\r\n    {\r\n      id: 1,\r\n      todo_name: \"todos shopping list\",\r\n      items: [\r\n        {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"homework\",\r\n        created_at: \"26/12/2020\",\r\n        completed:false,\r\n      },\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"googo \",\r\n        created_at: \"26/12/2020\",\r\n        completed:false,\r\n      }],\r\n      created_at: \"26/12/2020\",\r\n      updated_at: \"27/12/2020\"\r\n    },\r\n    {\r\n      id: 2,\r\n      todo_name: \"buy cars\",\r\n      items: [\r\n        {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"homework\",\r\n        created_at: \"26/12/2020\",\r\n        completed:false,\r\n      },\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"homework\",\r\n        created_at: \"26/12/2020\",\r\n        completed:false,\r\n      }],\r\n      created_at: \"26/12/2020\",\r\n      updated_at: \"27/12/2020\"\r\n    }\r\n  ],\r\n  counterId: 2\r\n}\r\n\r\n\r\nexport const toDoReducer = (state = initState, action) => {\r\n  if (action.type === \"addTask\") {\r\n    let temp_ar = [...state.tasks_ar];\r\n    temp_ar.push(action.taskItem);\r\n    return { ...state, tasks_ar: temp_ar }\r\n  }\r\n  else if (action.type === \"addCounterId\") {\r\n    state.counterId++;\r\n    return { ...state, counterId: state.counterId++ }\r\n\r\n  }\r\n\r\n  else {\r\n    return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}