{"ast":null,"code":"var _jsxFileName = \"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\src\\\\tods_comps\\\\todoTitle.js\";\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Moment from 'moment';\nimport \"../css_comps/todos.css\";\nimport { $CombinedState } from 'redux';\nimport { doApiPost } from '../services/apiService';\n\nfunction TodoTitle(props) {\n  let todoName = useRef(null);\n  let history = useHistory();\n  let counterId = useSelector(myStore => myStore.counterId);\n  let dispatch = useDispatch();\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\n\n  const addTodo = () => {\n    let url = `http://localhost:3000/todos/createTodo`;\n    let body = {\n      todo_name: todoName.current.value\n    };\n    doApiPost(url, body).then(data => {\n      let url = \"http://localhost:3000/todos\";\n      doApiGet(url).then(data => {\n        console.log(\"data for DB\", data);\n        dispatch({\n          type: \"updateList\",\n          data: data\n        });\n      });\n    }); // if (todoName.current.value === \"\") {\n    //   alert(\"Please enter todo name\");\n    // }\n    // else {\n    //   console.log(\"counterId\", counterId);\n    //   let bodyData = {\n    //     id: counterId,\n    //     todo_name: todoName.current.value,\n    //     items: [],\n    //     created_at: dateFormat,\n    //     updated_at: dateFormat\n    //   }\n    //   dispatch({ type: \"addTodoCrad\", todoCrad: bodyData })\n    //   todoName.current.value = \"\";\n    //   history.push(\"/\");\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"display-4 text-info mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Named your todo note title\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center justify-content-center mt-4 todoTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: todoName,\n    type: \"text\",\n    className: \"form-control w-50 p-4 border border-info todoTitle\",\n    placeholder: \"Please enter todo name...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTodo,\n    className: \"btn-lg btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Apply\")));\n}\n\nexport default TodoTitle;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/tods_comps/todoTitle.js"],"names":["React","useRef","useState","useDispatch","useSelector","useHistory","Moment","$CombinedState","doApiPost","TodoTitle","props","todoName","history","counterId","myStore","dispatch","dateFormat","Date","format","addTodo","url","body","todo_name","current","value","then","data","doApiGet","console","log","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,wBAAP;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAExB,MAAIC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAArB;AACA,MAAIW,OAAO,GAAGP,UAAU,EAAxB;AAEA,MAAIQ,SAAS,GAAGT,WAAW,CAAEU,OAAD,IAAaA,OAAO,CAACD,SAAtB,CAA3B;AACA,MAAIE,QAAQ,GAAGZ,WAAW,EAA1B;AACA,MAAIa,UAAU,GAAGV,MAAM,CAAC,IAAIW,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAjB;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAIC,GAAG,GAAI,wCAAX;AACA,QAAIC,IAAI,GAAG;AACTC,MAAAA,SAAS,EAAEX,QAAQ,CAACY,OAAT,CAAiBC;AADnB,KAAX;AAIAhB,IAAAA,SAAS,CAACY,GAAD,EAAMC,IAAN,CAAT,CACGI,IADH,CACQC,IAAI,IAAI;AACZ,UAAIN,GAAG,GAAG,6BAAV;AACAO,MAAAA,QAAQ,CAACP,GAAD,CAAR,CACGK,IADH,CACQC,IAAI,IAAI;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;AACAX,QAAAA,QAAQ,CAAC;AAAEe,UAAAA,IAAI,EAAE,YAAR;AAAsBJ,UAAAA,IAAI,EAAEA;AAA5B,SAAD,CAAR;AACD,OAJH;AAOD,KAVH,EANoB,CAmBpB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAED,GAtCD;;AAwCA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,eAEE;AAAK,IAAA,SAAS,EAAC,iEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAEf,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAC,oDAA5C;AAAiG,IAAA,WAAW,EAAC,2BAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,OAAO,EAAEQ,OAAjB;AAA0B,IAAA,SAAS,EAAC,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAFF,CADF;AASD;;AAED,eAAeV,SAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'moment';\r\nimport \"../css_comps/todos.css\";\r\nimport { $CombinedState } from 'redux';\r\nimport { doApiPost } from '../services/apiService';\r\nfunction TodoTitle(props) {\r\n\r\n  let todoName = useRef(null);\r\n  let history = useHistory();\r\n\r\n  let counterId = useSelector((myStore) => myStore.counterId)\r\n  let dispatch = useDispatch()\r\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\n\r\n\r\n\r\n  const addTodo = () => {\r\n    let url = `http://localhost:3000/todos/createTodo`;\r\n    let body = {\r\n      todo_name: todoName.current.value\r\n\r\n    }\r\n    doApiPost(url, body)\r\n      .then(data => {\r\n        let url = \"http://localhost:3000/todos\";\r\n        doApiGet(url)\r\n          .then(data => {\r\n            console.log(\"data for DB\", data);\r\n            dispatch({ type: \"updateList\", data: data })\r\n          });\r\n\r\n\r\n      })\r\n\r\n\r\n    // if (todoName.current.value === \"\") {\r\n    //   alert(\"Please enter todo name\");\r\n\r\n    // }\r\n    // else {\r\n    //   console.log(\"counterId\", counterId);\r\n    //   let bodyData = {\r\n    //     id: counterId,\r\n    //     todo_name: todoName.current.value,\r\n    //     items: [],\r\n    //     created_at: dateFormat,\r\n    //     updated_at: dateFormat\r\n    //   }\r\n    //   dispatch({ type: \"addTodoCrad\", todoCrad: bodyData })\r\n    //   todoName.current.value = \"\";\r\n    //   history.push(\"/\");\r\n\r\n    // }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      <h1 className=\"display-4 text-info mt-5\" >Named your todo note title</h1>\r\n      <div className=\"d-flex align-items-center justify-content-center mt-4 todoTitle\">\r\n        <input ref={todoName} type=\"text\" className=\"form-control w-50 p-4 border border-info todoTitle\" placeholder=\"Please enter todo name...\" />\r\n        <button onClick={addTodo} className=\"btn-lg btn-primary\">Apply</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoTitle\r\n"]},"metadata":{},"sourceType":"module"}