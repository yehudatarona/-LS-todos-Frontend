{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React,{useRef}from'react';import{useDispatch}from'react-redux';import\"../css_comps/todos.css\";import{doApiGet,doApiPost}from'../services/apiService';function ToDoItem(props){var userInput=useRef(null);var items=props.cardTodo.items;var dispatch=useDispatch();var addTask=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,body;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userInput.current.value===\"\"){alert(\"Please item name\");}else{// let url = `http://localhost:3000/todos/${props.cardTodo._id}/addItem/`\nurl=\"https://ls-task-todos.herokuapp.com/todos/\".concat(props.cardTodo._id,\"/addItem/\");body={item_name:userInput.current.value};doApiPost(url,body).then(function(){props.todosList();});userInput.current.value=\"\";}case 1:case\"end\":return _context.stop();}}},_callee);}));return function addTask(){return _ref.apply(this,arguments);};}();var checkedItem=function checkedItem(_val,_itemIndex){// let url = `http://localhost:3000/todos/${props.cardTodo._id}/updateStatus/${props.cardTodo.items[_itemIndex]._id}`;\nvar url=\"https://ls-task-todos.herokuapp.com/todos/\".concat(props.cardTodo._id,\"/updateStatus/\").concat(props.cardTodo.items[_itemIndex]._id);var body={completed:!_val};doApiPost(url,body).then(function(){props.todosList();});};var deleteItem=function deleteItem(_itemIndex){var url=\"https://ls-task-todos.herokuapp.com/todos/\".concat(props.cardTodo._id,\"/deleteItem/\").concat(props.cardTodo.items[_itemIndex]._id);doApiPost(url).then(function(){props.todosList();});};var deleteTodoCard=function deleteTodoCard(){var url=\"https://ls-task-todos.herokuapp.com/todos/deleteTodo/\".concat(props.cardTodo._id);doApiPost(url).then(function(){props.todosList();});};return/*#__PURE__*/React.createElement(\"div\",{className:\"p-2 \"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between align-items-center\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"display-4 text-center\"},props.cardTodo.todo_name),/*#__PURE__*/React.createElement(\"span\",{onClick:deleteTodoCard,className:\"delTodoCard\"},\"X\")),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex align-items-center justify-content-center inputItem\"},/*#__PURE__*/React.createElement(\"input\",{ref:userInput,type:\"text\",className:\"form-control  border border-info \",placeholder:\"I have to...\"}),/*#__PURE__*/React.createElement(\"button\",{onClick:addTask,className:\"btn btn-info\"},\"Add\")),items.map(function(val,itemIndex){return/*#__PURE__*/React.createElement(\"div\",{key:itemIndex,className:\"d-flex justify-content-between align-items-center p-2 mt-1 items \"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{id:val.id,type:\"checkbox\",name:\"isDone\",onChange:function onChange(){checkedItem(val.completed,itemIndex);},className:\"mr-1\",checked:val.completed}),/*#__PURE__*/React.createElement(\"label\",{htmlFor:val.id},val.item_name)),/*#__PURE__*/React.createElement(\"div\",null,val.created_at),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){deleteItem(itemIndex);},className:\"btn btn-secondary text-danger\"},\"X\"));}));}export default ToDoItem;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/tods_comps/toDoItem.js"],"names":["React","useRef","useDispatch","doApiGet","doApiPost","ToDoItem","props","userInput","items","cardTodo","dispatch","addTask","current","value","alert","url","_id","body","item_name","then","todosList","checkedItem","_val","_itemIndex","completed","deleteItem","deleteTodoCard","todo_name","map","val","itemIndex","id","created_at"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport \"../css_comps/todos.css\"\r\nimport { doApiGet, doApiPost } from '../services/apiService';\r\nfunction ToDoItem(props) {\r\n\r\n  let userInput = useRef(null);\r\n  let items = props.cardTodo.items\r\n  let dispatch = useDispatch();\r\n\r\n  const addTask = async () => {\r\n    if (userInput.current.value === \"\") {\r\n      alert(\"Please item name\");\r\n    }\r\n    else {\r\n      // let url = `http://localhost:3000/todos/${props.cardTodo._id}/addItem/`\r\n      let url = `https://ls-task-todos.herokuapp.com/todos/${props.cardTodo._id}/addItem/`\r\n      let body = {\r\n        item_name: userInput.current.value\r\n      }\r\n\r\n      doApiPost(url, body)\r\n        .then(() => {\r\n         \r\n          props.todosList();\r\n        })\r\n      userInput.current.value = \"\";\r\n\r\n    }\r\n  }\r\n\r\n  const checkedItem = (_val, _itemIndex) => {\r\n    // let url = `http://localhost:3000/todos/${props.cardTodo._id}/updateStatus/${props.cardTodo.items[_itemIndex]._id}`;\r\n    let url = `https://ls-task-todos.herokuapp.com/todos/${props.cardTodo._id}/updateStatus/${props.cardTodo.items[_itemIndex]._id}`;\r\n    let body = {\r\n      completed: !_val\r\n    }\r\n    doApiPost(url, body)\r\n      .then(()=> {\r\n        \r\n        props.todosList();\r\n\r\n      })\r\n\r\n  }\r\n\r\n  const deleteItem = (_itemIndex) => {\r\n    let url = `https://ls-task-todos.herokuapp.com/todos/${props.cardTodo._id}/deleteItem/${props.cardTodo.items[_itemIndex]._id}`;\r\n    doApiPost(url)\r\n      .then(() => {\r\n        \r\n        props.todosList();\r\n\r\n      })\r\n  }\r\n\r\n  const deleteTodoCard = () => {\r\n    let url = `https://ls-task-todos.herokuapp.com/todos/deleteTodo/${props.cardTodo._id}`;\r\n\r\n    doApiPost(url)\r\n      .then(() => {\r\n        props.todosList();\r\n\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-2 \">\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h1 className=\"display-4 text-center\" >{props.cardTodo.todo_name}</h1>\r\n        <span onClick={deleteTodoCard} className=\"delTodoCard\">X</span>\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center justify-content-center inputItem\">\r\n        <input ref={userInput} type=\"text\" className=\"form-control  border border-info \" placeholder=\"I have to...\" />\r\n        <button onClick={addTask} className=\"btn btn-info\">Add</button>\r\n      </div>\r\n      {items.map((val, itemIndex) => {\r\n        return (\r\n          <div key={itemIndex} className=\"d-flex justify-content-between align-items-center p-2 mt-1 items \">\r\n            <div>\r\n              <input id={val.id} type=\"checkbox\" name=\"isDone\" onChange={() => {\r\n                checkedItem(val.completed, itemIndex)\r\n              }} className=\"mr-1\" checked={val.completed} />\r\n              <label htmlFor={val.id}>{val.item_name}</label>\r\n            </div>\r\n            <div>{val.created_at}</div>\r\n            <button onClick={() => { deleteItem(itemIndex) }} className=\"btn btn-secondary text-danger\">X</button>\r\n          </div>)\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToDoItem\r\n\r\n"]},"metadata":{},"sourceType":"module"}