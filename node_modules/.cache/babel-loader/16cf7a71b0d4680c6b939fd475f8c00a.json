{"ast":null,"code":"var _jsxFileName = \"D:\\\\Speed Tech\\\\Ofer\\\\Recat\\\\react-app\\\\src\\\\tods_comps\\\\cardItem.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ToDoItem from \"./toDoItem\";\n\nfunction CardItem(props) {\n  let userInput = useRef(null);\n  let history = useHistory(); // let dateInput = useRef(null);\n\n  let counterId = useSelector(myStore => myStore.counterId);\n  let dispatch = useDispatch();\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY'); //   let temp_ar = props.allState_arr.filter(item => {\n  //     return (borders.indexOf(item.alpha3Code) > -1)\n  // })\n\n  let carditem = useSelector(myStore => myStore.todosList_ar);\n  let [team_ar, setTem_ar] = useState([]);\n  useEffect(() => {\n    if (props.match) {\n      if (props.match.params.id_item) {\n        console.log(\"carditem\", carditem);\n        console.log(props.match.params.id_item);\n\n        if (carditem) {\n          let val = carditem.filter(item => {\n            return item.id == props.match.params.id_item;\n          });\n          setTem_ar(val);\n        }\n      }\n    }\n  }, []);\n\n  const addTask = () => {// dispatch({ type: \"addCounterId\" });\n    // // alert(userInput.current.value);\n    // let bodyData = {\n    //   id: counterId,\n    //   task_name: \"todos shopping list\",\n    //   name: userInput.current.value,\n    //   items: [{test:\"123\"}],\n    //   created_at: dateFormat,\n    //   updated_at:dateFormat\n    // }\n    // dispatch({ type: \"addTask\", taskItem:bodyData})\n    // userInput.current.value=\"\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, team_ar.map((item, index) => {\n    return /*#__PURE__*/React.createElement(ToDoItem, {\n      key: index,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    });\n  }));\n}\n\nexport default CardItem;","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/tods_comps/cardItem.js"],"names":["React","useEffect","useRef","useState","Moment","useDispatch","useSelector","useHistory","ToDoItem","CardItem","props","userInput","history","counterId","myStore","dispatch","dateFormat","Date","format","carditem","todosList_ar","team_ar","setTem_ar","match","params","id_item","console","log","val","filter","item","id","addTask","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAIC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAtB;AACA,MAAIU,OAAO,GAAGL,UAAU,EAAxB,CAFuB,CAGvB;;AACA,MAAIM,SAAS,GAAGP,WAAW,CAAEQ,OAAD,IAAaA,OAAO,CAACD,SAAtB,CAA3B;AACA,MAAIE,QAAQ,GAAGV,WAAW,EAA1B;AACA,MAAIW,UAAU,GAAGZ,MAAM,CAAC,IAAIa,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAjB,CANuB,CASvB;AACA;AACA;;AACA,MAAIC,QAAQ,GAAGb,WAAW,CAAEQ,OAAD,IAAaA,OAAO,CAACM,YAAtB,CAA1B;AACA,MAAI,CAACC,OAAD,EAAUC,SAAV,IAAuBnB,QAAQ,CAAC,EAAD,CAAnC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAK,CAACa,KAAV,EAAiB;AACf,UAAIb,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,OAAvB,EAAgC;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,QAAxB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,OAA/B;;AACA,YAAIN,QAAJ,EAAc;AACZ,cAAIS,GAAG,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,IAAI,IAAI;AAAE,mBAAOA,IAAI,CAACC,EAAL,IAAWrB,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,OAArC;AAA8C,WAAxE,CAAV;AACAH,UAAAA,SAAS,CAACM,GAAD,CAAT;AACD;AAIF;AAEF;AAEF,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,QAAMI,OAAO,GAAG,MAAM,CACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,OAAO,CAACY,GAAR,CAAY,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC5B,wBAAQ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAEJ,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD,GAFA,CAPH,CADF;AAcD;;AAED,eAAerB,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ToDoItem from \"./toDoItem\";\r\nfunction CardItem(props) {\r\n  let userInput = useRef(null);\r\n  let history = useHistory()\r\n  // let dateInput = useRef(null);\r\n  let counterId = useSelector((myStore) => myStore.counterId)\r\n  let dispatch = useDispatch()\r\n  let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\n\r\n\r\n  //   let temp_ar = props.allState_arr.filter(item => {\r\n  //     return (borders.indexOf(item.alpha3Code) > -1)\r\n  // })\r\n  let carditem = useSelector((myStore) => myStore.todosList_ar)\r\n  let [team_ar, setTem_ar] = useState([]);\r\n  useEffect(() => {\r\n    if (props.match) {\r\n      if (props.match.params.id_item) {\r\n        console.log(\"carditem\", carditem);\r\n        console.log(props.match.params.id_item);\r\n        if (carditem) {\r\n          let val = carditem.filter(item => { return item.id == props.match.params.id_item })\r\n          setTem_ar(val)\r\n        }\r\n\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }, [])\r\n\r\n  const addTask = () => {\r\n    // dispatch({ type: \"addCounterId\" });\r\n    // // alert(userInput.current.value);\r\n    // let bodyData = {\r\n    //   id: counterId,\r\n    //   task_name: \"todos shopping list\",\r\n    //   name: userInput.current.value,\r\n    //   items: [{test:\"123\"}],\r\n    //   created_at: dateFormat,\r\n    //   updated_at:dateFormat\r\n    // }\r\n    // dispatch({ type: \"addTask\", taskItem:bodyData})\r\n    // userInput.current.value=\"\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container text-center\">\r\n      {/* <h1 className=\"display-4 mx-5\" style={{ color: \"turquoise\" }}>Add an item to todo list </h1>\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <input ref={userInput} type=\"text\" className=\"form-control w-25 border border-info\" placeholder=\"I have to...\" />\r\n        <button onClick={addTask} className=\"btn btn-success\">Add Item</button>\r\n        <button onClick={()=>{history.push(\"/\")}} className=\"btn btn-warning mx-1\">Submit</button>\r\n      </div> */}\r\n      {team_ar.map((item, index) => {\r\n        return (<ToDoItem key={index} item={item}></ToDoItem>)\r\n      })}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n\r\n"]},"metadata":{},"sourceType":"module"}