{"ast":null,"code":"// import Moment from 'moment';\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\nconst initState = {\n  item: {\n    id: Math.random(300 * 39 * 10).toFixed(2),\n    item_name: \"homework\",\n    created_at: \"26/12/2020\",\n    completed: false\n  },\n  card: {\n    id: 1,\n    todo_name: \"todos shopping list\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"googo \",\n      created_at: \"26/12/2020\",\n      completed: false\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  },\n  todosList_ar: [// {\n    //   id: 1,\n    //   todo_name: \"todos shopping list\",\n    //   items: [\n    //     {\n    //       id: Math.random(300 * 39).toFixed(2),\n    //       item_name: \"homework\",\n    //       created_at: \"26/12/2020\",\n    //       completed: false,\n    //     },\n    //     {\n    //       id: Math.random(300 * 39).toFixed(2),\n    //       item_name: \"googo \",\n    //       created_at: \"26/12/2020\",\n    //       completed: true,\n    //     }],\n    //   created_at: \"26/12/2020\",\n    //   updated_at: \"27/12/2020\"\n    // },\n    // {\n    //   id: 2,\n    //   todo_name: \"buy cars\",\n    //   items: [\n    //     {\n    //       id: Math.random(300 * 39).toFixed(2),\n    //       item_name: \"go to trip arond the world\",\n    //       created_at: \"26/12/2020\",\n    //       completed: Boolean,\n    //     },\n    //     {\n    //       id: Math.random(300 * 39).toFixed(2),\n    //       item_name: \"lensting to music list\",\n    //       created_at: \"26/12/2020\",\n    //       completed: Boolean(false),\n    //     }],\n    //   created_at: \"26/12/2020\",\n    //   updated_at: \"27/12/2020\"\n    // }\n  ],\n  counterId: 3\n}; // let carditem = useSelector((myStore) => myStore.todosList_ar)\n\nexport const toDoReducer = (state = initState, action) => {\n  if (action.type === \"updateList\") {\n    return { ...state,\n      todosList_ar: action.data\n    };\n  } else {\n    return state;\n  }\n};","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/reducer/toDoReducer.js"],"names":["initState","item","id","Math","random","toFixed","item_name","created_at","completed","card","todo_name","items","updated_at","todosList_ar","counterId","toDoReducer","state","action","type","data"],"mappings":"AAAA;AACA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAa,MAAM,EAAP,GAAa,EAAzB,EAA6BC,OAA7B,CAAqC,CAArC,CADA;AAEJC,IAAAA,SAAS,EAAE,UAFP;AAGJC,IAAAA,UAAU,EAAE,YAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADU;AAOhBC,EAAAA,IAAI,EAAE;AACJP,IAAAA,EAAE,EAAE,CADA;AAEJQ,IAAAA,SAAS,EAAE,qBAFP;AAGJC,IAAAA,KAAK,EAAE,CACL;AACET,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,EAOL;AACEN,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPK,CAHH;AAgBJD,IAAAA,UAAU,EAAE,YAhBR;AAiBJK,IAAAA,UAAU,EAAE;AAjBR,GAPU;AA0BhBC,EAAAA,YAAY,EAAE,CACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCY,GA1BE;AAkEhBC,EAAAA,SAAS,EAAE;AAlEK,CAAlB,C,CAqEA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGhB,SAAT,EAAoBiB,MAApB,KAA+B;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAC/B,WAAO,EAAE,GAAGF,KAAL;AAAYH,MAAAA,YAAY,EAAEI,MAAM,CAACE;AAAjC,KAAP;AACD,GAFF,MAGM;AACH,WAAOH,KAAP;AACD;AACF,CAPM","sourcesContent":["// import Moment from 'moment';\r\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\nconst initState = {\r\n  item: {\r\n    id: Math.random((300 * 39) * 10).toFixed(2),\r\n    item_name: \"homework\",\r\n    created_at: \"26/12/2020\",\r\n    completed: false,\r\n  },\r\n  card: {\r\n    id: 1,\r\n    todo_name: \"todos shopping list\",\r\n    items: [\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"homework\",\r\n        created_at: \"26/12/2020\",\r\n        completed: false,\r\n      },\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"googo \",\r\n        created_at: \"26/12/2020\",\r\n        completed: false,\r\n      }],\r\n    created_at: \"26/12/2020\",\r\n    updated_at: \"27/12/2020\"\r\n  },\r\n  todosList_ar: [\r\n    // {\r\n    //   id: 1,\r\n    //   todo_name: \"todos shopping list\",\r\n    //   items: [\r\n    //     {\r\n    //       id: Math.random(300 * 39).toFixed(2),\r\n    //       item_name: \"homework\",\r\n    //       created_at: \"26/12/2020\",\r\n    //       completed: false,\r\n    //     },\r\n    //     {\r\n    //       id: Math.random(300 * 39).toFixed(2),\r\n    //       item_name: \"googo \",\r\n    //       created_at: \"26/12/2020\",\r\n    //       completed: true,\r\n    //     }],\r\n    //   created_at: \"26/12/2020\",\r\n    //   updated_at: \"27/12/2020\"\r\n    // },\r\n    // {\r\n    //   id: 2,\r\n    //   todo_name: \"buy cars\",\r\n    //   items: [\r\n    //     {\r\n    //       id: Math.random(300 * 39).toFixed(2),\r\n    //       item_name: \"go to trip arond the world\",\r\n    //       created_at: \"26/12/2020\",\r\n    //       completed: Boolean,\r\n    //     },\r\n    //     {\r\n    //       id: Math.random(300 * 39).toFixed(2),\r\n    //       item_name: \"lensting to music list\",\r\n    //       created_at: \"26/12/2020\",\r\n    //       completed: Boolean(false),\r\n    //     }],\r\n    //   created_at: \"26/12/2020\",\r\n    //   updated_at: \"27/12/2020\"\r\n    // }\r\n  ],\r\n  counterId: 3\r\n}\r\n\r\n// let carditem = useSelector((myStore) => myStore.todosList_ar)\r\nexport const toDoReducer = (state = initState, action) => {\r\n if (action.type === \"updateList\") {\r\n    return { ...state, todosList_ar: action.data }\r\n  }\r\n  else {\r\n    return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}