{"ast":null,"code":"// import Moment from 'moment';\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\nconst initState = {\n  item: {\n    id: Math.random(300 * 39 * 10).toFixed(2),\n    item_name: \"homework\",\n    created_at: \"26/12/2020\",\n    completed: false\n  },\n  card: {\n    id: 1,\n    todo_name: \"todos shopping list\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"googo \",\n      created_at: \"26/12/2020\",\n      completed: false\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  },\n  todosList_ar: [{\n    id: 1,\n    todo_name: \"todos shopping list\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"homework\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"googo \",\n      created_at: \"26/12/2020\",\n      completed: true\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  }, {\n    id: 2,\n    todo_name: \"buy cars\",\n    items: [{\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"go to trip arond the world\",\n      created_at: \"26/12/2020\",\n      completed: true\n    }, {\n      id: Math.random(300 * 39).toFixed(2),\n      item_name: \"lensting to music list\",\n      created_at: \"26/12/2020\",\n      completed: false\n    }],\n    created_at: \"26/12/2020\",\n    updated_at: \"27/12/2020\"\n  }],\n  counterId: 3\n}; // let carditem = useSelector((myStore) => myStore.todosList_ar)\n\nexport const toDoReducer = (state = initState, action) => {\n  if (action.type === \"addTodoCrad\") {\n    // let temp_ar = state.todosList_ar;\n    let temp_ar = [...state.todosList_ar];\n    temp_ar.push(action.todoCrad);\n    state.counterId++;\n    return { ...state,\n      todosList_ar: temp_ar\n    };\n  } else if (action.type === \"addItem\") {\n    // debugger\n    let index;\n    let tempCard = state.todosList_ar.filter((item, i) => {\n      if (item.id === action.ItemBody.id_card) {\n        index = i;\n        return item;\n      }\n    });\n    let itemObj = {\n      id: action.ItemBody.id,\n      item_name: action.ItemBody.item_name,\n      created_at: action.ItemBody.created_at,\n      completed: action.ItemBody.created_at\n    };\n    console.log(state.todosList_ar); // let tempList = state.todosList_ar;\n\n    let tempList = [...state.todosList_ar]; //debugger\n\n    tempList[index].items.push(itemObj);\n    console.log(\"tempList->\", tempList);\n    return { ...state,\n      todosList_ar: tempList\n    };\n  } else if (action.type === \"delTask\") {\n    let temp_ar = state.todosList_ar.map(card => {\n      if (card.id == action.itemDelete.idCard) {\n        let deleteOneItem = card.items.filter(item => {\n          return item.id != action.itemDelete.id;\n        });\n      }\n    });\n    return { ...state,\n      todosList_ar: temp_ar\n    };\n  } else if (action.type === \"changeCompleted\") {\n    let temp_ar = [...state.todosList_ar];\n    temp_ar[action.itemChack.id_card] = action.itemChack.item;\n    return { ...state,\n      todosList_ar: temp_ar\n    };\n  } else {\n    return state;\n  }\n};","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/reducer/toDoReducer.js"],"names":["initState","item","id","Math","random","toFixed","item_name","created_at","completed","card","todo_name","items","updated_at","todosList_ar","counterId","toDoReducer","state","action","type","temp_ar","push","todoCrad","index","tempCard","filter","i","ItemBody","id_card","itemObj","console","log","tempList","map","itemDelete","idCard","deleteOneItem","itemChack"],"mappings":"AAAA;AACA;AACA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAa,MAAM,EAAP,GAAW,EAAvB,EAA2BC,OAA3B,CAAmC,CAAnC,CADA;AAEJC,IAAAA,SAAS,EAAE,UAFP;AAGJC,IAAAA,UAAU,EAAE,YAHR;AAIJC,IAAAA,SAAS,EAAE;AAJP,GADU;AAOhBC,EAAAA,IAAI,EAAE;AACJP,IAAAA,EAAE,EAAE,CADA;AAEJQ,IAAAA,SAAS,EAAE,qBAFP;AAGJC,IAAAA,KAAK,EAAE,CACL;AACET,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,EAOL;AACEN,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPK,CAHH;AAgBJD,IAAAA,UAAU,EAAE,YAhBR;AAiBJK,IAAAA,UAAU,EAAE;AAjBR,GAPU;AA0BhBC,EAAAA,YAAY,EAAE,CACZ;AACEX,IAAAA,EAAE,EAAE,CADN;AAEEQ,IAAAA,SAAS,EAAE,qBAFb;AAGEC,IAAAA,KAAK,EAAE,CACL;AACET,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,UAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,EAOL;AACEN,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,QAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPK,CAHT;AAgBED,IAAAA,UAAU,EAAE,YAhBd;AAiBEK,IAAAA,UAAU,EAAE;AAjBd,GADY,EAoBZ;AACEV,IAAAA,EAAE,EAAE,CADN;AAEEQ,IAAAA,SAAS,EAAE,UAFb;AAGEC,IAAAA,KAAK,EAAE,CACL;AACET,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,4BAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KADK,EAOL;AACEN,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAY,MAAM,EAAlB,EAAsBC,OAAtB,CAA8B,CAA9B,CADN;AAEEC,MAAAA,SAAS,EAAE,wBAFb;AAGEC,MAAAA,UAAU,EAAE,YAHd;AAIEC,MAAAA,SAAS,EAAE;AAJb,KAPK,CAHT;AAgBED,IAAAA,UAAU,EAAE,YAhBd;AAiBEK,IAAAA,UAAU,EAAE;AAjBd,GApBY,CA1BE;AAkEhBE,EAAAA,SAAS,EAAE;AAlEK,CAAlB,C,CAqEA;;AACA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGhB,SAAT,EAAoBiB,MAApB,KAA+B;AACxD,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC;AACA,QAAIC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACH,YAAV,CAAd;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAaH,MAAM,CAACI,QAApB;AACAL,IAAAA,KAAK,CAACF,SAAN;AACA,WAAO,EAAE,GAAGE,KAAL;AAAYH,MAAAA,YAAY,EAAEM;AAA1B,KAAP;AACD,GAND,MAOK,IAAIF,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AACnC;AACC,QAAII,KAAJ;AACA,QAAIC,QAAQ,GAAGP,KAAK,CAACH,YAAN,CAAmBW,MAAnB,CAA0B,CAACvB,IAAD,EAAMwB,CAAN,KAAY;AACnD,UAAGxB,IAAI,CAACC,EAAL,KAAYe,MAAM,CAACS,QAAP,CAAgBC,OAA/B,EAAuC;AACrCL,QAAAA,KAAK,GAACG,CAAN;AACA,eAAOxB,IAAP;AACD;AAEF,KANc,CAAf;AAOA,QAAI2B,OAAO,GAAG;AACZ1B,MAAAA,EAAE,EAAEe,MAAM,CAACS,QAAP,CAAgBxB,EADR;AAEZI,MAAAA,SAAS,EAAEW,MAAM,CAACS,QAAP,CAAgBpB,SAFf;AAGZC,MAAAA,UAAU,EAAEU,MAAM,CAACS,QAAP,CAAgBnB,UAHhB;AAIZC,MAAAA,SAAS,EAAES,MAAM,CAACS,QAAP,CAAgBnB;AAJf,KAAd;AAMAsB,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACH,YAAlB,EAhBkC,CAiBlC;;AACA,QAAIkB,QAAQ,GAAG,CAAC,GAAGf,KAAK,CAACH,YAAV,CAAf,CAlBkC,CAmBlC;;AAEAkB,IAAAA,QAAQ,CAACT,KAAD,CAAR,CAAgBX,KAAhB,CAAsBS,IAAtB,CAA2BQ,OAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBC,QAAzB;AACA,WAAO,EAAE,GAAGf,KAAL;AAAYH,MAAAA,YAAY,EAAEkB;AAA1B,KAAP;AAEC,GAzBE,MA2BE,IAAGd,MAAM,CAACC,IAAP,KAAgB,SAAnB,EAA6B;AAChC,QAAIC,OAAO,GAAGH,KAAK,CAACH,YAAN,CAAmBmB,GAAnB,CAAuBvB,IAAI,IAAE;AACzC,UAAGA,IAAI,CAACP,EAAL,IAAWe,MAAM,CAACgB,UAAP,CAAkBC,MAAhC,EAAuC;AACrC,YAAIC,aAAa,GAAG1B,IAAI,CAACE,KAAL,CAAWa,MAAX,CAAkBvB,IAAI,IAAE;AAC1C,iBAAOA,IAAI,CAACC,EAAL,IAAWe,MAAM,CAACgB,UAAP,CAAkB/B,EAApC;AACD,SAFmB,CAApB;AAGD;AACF,KANa,CAAd;AAQA,WAAO,EAAC,GAAGc,KAAJ;AAAYH,MAAAA,YAAY,EAACM;AAAzB,KAAP;AACD,GAVI,MAaA,IAAIF,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AAC1C,QAAIC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACH,YAAV,CAAd;AACAM,IAAAA,OAAO,CAACF,MAAM,CAACmB,SAAP,CAAiBT,OAAlB,CAAP,GAAoCV,MAAM,CAACmB,SAAP,CAAiBnC,IAArD;AACA,WAAO,EAAE,GAAGe,KAAL;AAAYH,MAAAA,YAAY,EAAEM;AAA1B,KAAP;AACD,GAJI,MAMF;AACH,WAAOH,KAAP;AACD;AACF,CAzDM","sourcesContent":["// import Moment from 'moment';\r\n// let dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\nconst initState = {\r\n  item: {\r\n    id: Math.random((300 * 39)*10).toFixed(2),\r\n    item_name: \"homework\",\r\n    created_at: \"26/12/2020\",\r\n    completed: false,\r\n  },\r\n  card: {\r\n    id: 1,\r\n    todo_name: \"todos shopping list\",\r\n    items: [\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"homework\",\r\n        created_at: \"26/12/2020\",\r\n        completed: false,\r\n      },\r\n      {\r\n        id: Math.random(300 * 39).toFixed(2),\r\n        item_name: \"googo \",\r\n        created_at: \"26/12/2020\",\r\n        completed: false,\r\n      }],\r\n    created_at: \"26/12/2020\",\r\n    updated_at: \"27/12/2020\"\r\n  },\r\n  todosList_ar: [\r\n    {\r\n      id: 1,\r\n      todo_name: \"todos shopping list\",\r\n      items: [\r\n        {\r\n          id: Math.random(300 * 39).toFixed(2),\r\n          item_name: \"homework\",\r\n          created_at: \"26/12/2020\",\r\n          completed: false,\r\n        },\r\n        {\r\n          id: Math.random(300 * 39).toFixed(2),\r\n          item_name: \"googo \",\r\n          created_at: \"26/12/2020\",\r\n          completed: true,\r\n        }],\r\n      created_at: \"26/12/2020\",\r\n      updated_at: \"27/12/2020\"\r\n    },\r\n    {\r\n      id: 2,\r\n      todo_name: \"buy cars\",\r\n      items: [\r\n        {\r\n          id: Math.random(300 * 39).toFixed(2),\r\n          item_name: \"go to trip arond the world\",\r\n          created_at: \"26/12/2020\",\r\n          completed: true,\r\n        },\r\n        {\r\n          id: Math.random(300 * 39).toFixed(2),\r\n          item_name: \"lensting to music list\",\r\n          created_at: \"26/12/2020\",\r\n          completed: false,\r\n        }],\r\n      created_at: \"26/12/2020\",\r\n      updated_at: \"27/12/2020\"\r\n    }\r\n  ],\r\n  counterId: 3\r\n}\r\n\r\n// let carditem = useSelector((myStore) => myStore.todosList_ar)\r\nexport const toDoReducer = (state = initState, action) => {\r\n  if (action.type === \"addTodoCrad\") {\r\n    // let temp_ar = state.todosList_ar;\r\n    let temp_ar = [...state.todosList_ar];\r\n    temp_ar.push(action.todoCrad);\r\n    state.counterId++;\r\n    return { ...state, todosList_ar: temp_ar }\r\n  }\r\n  else if (action.type === \"addItem\") {\r\n   // debugger\r\n    let index;\r\n    let tempCard = state.todosList_ar.filter((item,i) => {\r\n      if(item.id === action.ItemBody.id_card){\r\n        index=i\r\n        return item;\r\n      }\r\n     \r\n    });\r\n    let itemObj = {\r\n      id: action.ItemBody.id,\r\n      item_name: action.ItemBody.item_name,\r\n      created_at: action.ItemBody.created_at,\r\n      completed: action.ItemBody.created_at\r\n    }\r\n    console.log(state.todosList_ar);\r\n    // let tempList = state.todosList_ar;\r\n    let tempList = [...state.todosList_ar];\r\n    //debugger\r\n    \r\n    tempList[index].items.push(itemObj)\r\n    console.log(\"tempList->\",tempList);\r\n    return { ...state, todosList_ar: tempList }\r\n  \r\n    }\r\n\r\n    else if(action.type === \"delTask\"){\r\n      let temp_ar = state.todosList_ar.map(card=>{\r\n        if(card.id == action.itemDelete.idCard){\r\n          let deleteOneItem = card.items.filter(item=>{\r\n            return item.id != action.itemDelete.id;\r\n          })\r\n        }\r\n      })\r\n       \r\n      return {...state , todosList_ar:temp_ar}\r\n    }\r\n\r\n\r\n    else if (action.type === \"changeCompleted\") {\r\n      let temp_ar = [...state.todosList_ar];\r\n      temp_ar[action.itemChack.id_card] = action.itemChack.item\r\n      return { ...state, todosList_ar: temp_ar }\r\n    }\r\n  \r\n  else {\r\n    return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}