{"ast":null,"code":"import Moment from 'moment';\nlet dateFormat = Moment(new Date()).format('DD/MM/YYYY');\nconst initState = {\n  tasks_ar: [// { id:1, name: \"Do homework\", date: dateFormat },\n    // { id:2, name: \"Go to work\", date: dateFormat }\n  ],\n  counterId: 2\n};\nexport const toDoReducer = (state = initState, action) => {\n  if (action.type === \"addTask\") {\n    let temp_ar = [...state.tasks_ar];\n    temp_ar.push(action.taskItem);\n    return { ...state,\n      tasks_ar: temp_ar\n    };\n  } else if (action.type === \"addCounterId\") {\n    state.counterId++;\n    return { ...state,\n      counterId: state.counterId++\n    };\n  } else {\n    return state;\n  }\n};","map":{"version":3,"sources":["D:/Speed Tech/Ofer/Recat/react-app/src/reducer/toDoReducer.js"],"names":["Moment","dateFormat","Date","format","initState","tasks_ar","counterId","toDoReducer","state","action","type","temp_ar","push","taskItem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,IAAIC,UAAU,GAAGD,MAAM,CAAC,IAAIE,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAjB;AACA,MAAMC,SAAS,GAAE;AACbC,EAAAA,QAAQ,EAAC,CACL;AACA;AAFK,GADI;AAKXC,EAAAA,SAAS,EAAC;AALC,CAAjB;AASA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AACtD,MAAGA,MAAM,CAACC,IAAP,KAAgB,SAAnB,EAA6B;AAC3B,QAAIC,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACH,QAAV,CAAd;AACAM,IAAAA,OAAO,CAACC,IAAR,CAAaH,MAAM,CAACI,QAApB;AACA,WAAO,EAAC,GAAGL,KAAJ;AAAYH,MAAAA,QAAQ,EAACM;AAArB,KAAP;AACD,GAJD,MAKK,IAAGF,MAAM,CAACC,IAAP,KAAe,cAAlB,EAAiC;AAClCF,IAAAA,KAAK,CAACF,SAAN;AACA,WAAM,EAAC,GAAGE,KAAJ;AAAUF,MAAAA,SAAS,EAACE,KAAK,CAACF,SAAN;AAApB,KAAN;AAEH,GAJI,MAMD;AACF,WAAOE,KAAP;AACD;AACF,CAfI","sourcesContent":["import Moment from 'moment';\r\nlet dateFormat = Moment(new Date()).format('DD/MM/YYYY');\r\nconst initState ={\r\n    tasks_ar:[\r\n        // { id:1, name: \"Do homework\", date: dateFormat },\r\n        // { id:2, name: \"Go to work\", date: dateFormat }\r\n      ],\r\n      counterId:2\r\n}\r\n\r\n\r\nexport const toDoReducer = (state = initState, action) => {\r\n    if(action.type === \"addTask\"){\r\n      let temp_ar = [...state.tasks_ar];\r\n      temp_ar.push(action.taskItem);\r\n      return {...state , tasks_ar:temp_ar}\r\n    }\r\n    else if(action.type ===\"addCounterId\"){\r\n        state.counterId++;\r\n        return{...state,counterId:state.counterId++}\r\n\r\n    }\r\n  \r\n    else{\r\n      return state;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}